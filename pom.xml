<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>pl.duncol</groupId>
	<artifactId>Truckito</artifactId>
	<packaging>war</packaging>
	<version>1.0</version>
	<name>Truckito</name>

	<prerequisites>
		<maven>3</maven>
	</prerequisites>

	<properties>
		<!-- <resteasy.version>3.0.14.Final</resteasy.version> -->
		<failOnMissingWebXml>false</failOnMissingWebXml>
		<version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>
		<vaadin.version>8.1.5</vaadin.version>
		<vaadin.plugin.version>8.1.5</vaadin.plugin.version>
		<jetty.plugin.version>9.3.9.v20160517</jetty.plugin.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<!-- If there are no local customizations, this can also be "fetch" or 
			"cdn" -->
		<vaadin.widgetset.mode>local</vaadin.widgetset.mode>
		<lombok.version>1.16.18</lombok.version>
		<jrebel.plugin.version>1.1.7</jrebel.plugin.version>
	</properties>

	<repositories>
		<repository>
			<id>vaadin-addons</id>
			<url>http://maven.vaadin.com/vaadin-addons</url>
		</repository>
	</repositories>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-bom</artifactId>
				<version>${vaadin.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-server</artifactId>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-push</artifactId>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-client-compiled</artifactId>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-themes</artifactId>
		</dependency>

		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-cdi</artifactId>
		</dependency>
		
		<dependency>
   			<groupId>org.vaadin.addons</groupId>
   			<artifactId>animator</artifactId>
   			<version>3.0.0</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>5.2.10.Final</version>
		</dependency>

		<!-- <dependency> <groupId>mysql</groupId> <artifactId>mysql-connector-java</artifactId> 
			<version>6.0.6</version> </dependency> -->

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.39</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>javax.persistence</artifactId>
			<version>2.0.0</version>
		</dependency>

		<dependency>
			<groupId>dom4j</groupId>
			<artifactId>dom4j</artifactId>
			<version>1.6.1</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<version>2.0</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>7.0</version>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>bootstrap-sass</artifactId>
			<version>3.3.7</version>
		</dependency>

	</dependencies>

	<build>
		<plugins>

			<!-- <plugin> <groupId>org.zeroturnaround</groupId> <artifactId>jrebel-maven-plugin</artifactId> 
				<version>1.1.7</version> <configuration> If your project uses custom packaging 
				that is not recognized set this to jar or war. <packaging>war</packaging> 
				<classpath> <resources> <resource> A relative path. <directory>target/classes</directory> 
				You may use includes and excludes as with any other resource. <includes> 
				<include>VAADIN/themes/mytheme/**</include> </includes> <excludes> </excludes> 
				</resource> <resource> Empty resource element marks default configuration. 
				By default it is placed first in generated configuration. </resource> </resources> 
				</classpath> <web> <resources> <resource> <target>target/classes</target> 
				<directory>VAADIN/themes/mytheme</directory> </resource> <resource> Empty 
				resource element marks default configuration. By default it is placed first 
				in generated configuration. </resource> </resources> </web> addResourcesDirToRebelXml 
				- Defines whether resource directories will be added to rebel.xml. It is 
				more recommended to map target/classes folder instead and rely on IDE or 
				Maven to update resources under target/classes. Defaults to 'false'. <addResourcesDirToRebelXml>true</addResourcesDirToRebelXml> 
				alwaysGenerate - If true, rebel.xml will be re-generated even if the existing 
				rebel.xml is newer than project's pom.xml. Defaults to 'false'. <alwaysGenerate>true</alwaysGenerate> 
				</configuration> </plugin> -->

			<!-- <plugin> <groupId>com.github.warmuuh</groupId> <artifactId>libsass-maven-plugin</artifactId> 
				<version>0.2.8-libsass_3.4.4</version> <executions> <execution> <phase>generate-resources</phase> 
				<goals> <goal>compile</goal> </goals> </execution> </executions> <configuration> 
				<enableClasspathAwareImporter>true</enableClasspathAwareImporter> <outputStyle>compressed</outputStyle> 
				<inputPath>${basedir}/src/main/webapp/VAADIN/themes/mytheme/</inputPath> 
				<outputPath>${basedir}/src/main/webapp/VAADIN/themes/mytheme/</outputPath> 
				</configuration> </plugin> -->

			<plugin>
				<groupId>org.wildfly.plugins</groupId>
				<artifactId>wildfly-maven-plugin</artifactId>
				<version>1.2.0.Final</version>
				<configuration>
					<username>root</username>
					<password>1234</password>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>deploy</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<!-- Exclude an unnecessary file generated by the GWT compiler. -->
					<!-- <warSourceDirectory>WebContent</warSourceDirectory> -->
					<packagingExcludes>WEB-INF/classes/VAADIN/widgetsets/WEB-INF/**</packagingExcludes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.0.0</version>
				<!-- Clean up also any pre-compiled themes -->
				<configuration>
					<filesets>
						<fileset>
							<directory>src/main/webapp/VAADIN/themes</directory>
							<includes>
								<include>**/styles.css</include>
								<include>**/styles.scss.cache</include>
							</includes>
						</fileset>
					</filesets>
				</configuration>
				<executions>
<!-- 				<execution>
						<id>auto-clean</id>
						<phase>package</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution> -->
				</executions>
			</plugin>

			<plugin>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-maven-plugin</artifactId>
				<version>${vaadin.plugin.version}</version>
				<configuration>
					<webappDirectory>src/main/webapp/VAADIN/widgetsets</webappDirectory>
					<extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
					<runTarget>vaadin-mvn-addon</runTarget>
					<soyc>false</soyc>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>update-theme</goal>
							<goal>update-widgetset</goal>
							<!-- <goal>compile</goal> -->
							<!-- Comment out compile-theme goal to use on-the-fly theme compilation -->
							<!-- <goal>compile-theme</goal> -->
						</goals>
					</execution>
				</executions>
			</plugin>
			
			

			<!-- The Jetty plugin allows us to easily test the development build by 
				running jetty:run on the command line. -->
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${jetty.plugin.version}</version>
				<configuration>
					<scanIntervalSeconds>2</scanIntervalSeconds>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.zeroturnaround</groupId>
				<artifactId>jrebel-maven-plugin</artifactId>
				<version>1.1.7</version>
				<executions>
					<execution>
						<id>generate-rebel-xml</id>
						<phase>process-resources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
			</plugin>


		</plugins>

		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.zeroturnaround
										</groupId>
										<artifactId>
											jrebel-maven-plugin
										</artifactId>
										<versionRange>
											[1.1.7,)
										</versionRange>
										<goals>
											<goal>generate</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<!-- Vaadin pre-release repositories -->
			<id>vaadin-prerelease</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>

			<repositories>
				<repository>
					<id>vaadin-prereleases</id>
					<url>http://maven.vaadin.com/vaadin-prereleases</url>
				</repository>
				<repository>
					<id>vaadin-snapshots</id>
					<url>https://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
					<releases>
						<enabled>false</enabled>
					</releases>
					<snapshots>
						<enabled>true</enabled>
					</snapshots>
				</repository>
			</repositories>
			<pluginRepositories>
				<pluginRepository>
					<id>vaadin-prereleases</id>
					<url>http://maven.vaadin.com/vaadin-prereleases</url>
				</pluginRepository>
				<pluginRepository>
					<id>vaadin-snapshots</id>
					<url>https://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
					<releases>
						<enabled>false</enabled>
					</releases>
					<snapshots>
						<enabled>true</enabled>
					</snapshots>
				</pluginRepository>
			</pluginRepositories>
		</profile>
	</profiles>

</project>
